spring:
  main:
    banner-mode: off
    allow-circular-references: true
  application:
    name: test-io
  servlet:
    multipart:
      enabled: false
      max-file-size: 100MB
      max-request-size: 100MB
  data:
    web:
      pageable:
        max-page-size: ${MAX_PAGE_SIZE:1000}
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL:jdbc:postgresql://localhost:5432/postgres}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
    hikari:
      minimum-idle: ${DB_HIKARI_MIN_IDLE:2}
      maximum-pool-size: ${DB_HIKARI_MAX_POOL_SIZE:10}
      idle-timeout: ${DB_HIKARI_IDLE_TIMEOUT:30000}
      pool-name: SpringBootJPAHikariCP
      max-lifetime: ${DB_HIKARI_MAX_LIFETIME:1750000}
      connection-timeout: ${DB_HIKARI_CONNECT_TIMEOUT:30000}
      auto-commit: false
  cache:
    jcache:
      config: classpath:ehcache.xml
  jpa:
    open-in-view: false
    properties:
      javax:
        persistence:
          sharedCache:
            mode: ENABLE_SELECTIVE
      hibernate:
        ddl-auto: validate
        default_schema: ${DB_DEFAULT_SCHEMA:postgres}
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          use_get_generated_keys: true
        temp:
          use_jdbc_metadata_defaults: false
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
        javax.cache:
          provider: org.ehcache.jsr107.EhcacheCachingProvider
          uri: classpath:ehcache.xml
    database: postgresql
  liquibase:
    change-log: classpath:/db/changelog/AppDatabaseChangeLog.xml
    contexts: ${DB_MIGRATION_CONTEXT:init,insert}
    liquibase-schema: ${DB_MIGRATION_SCHEMA:migration}
    default-schema: ${DB_DEFAULT_SCHEMA:postgres}
    drop-first: ${DB_DROP_FIRST:true}
    user: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
  mvc:
    throw-exception-if-no-handler-found: true
    pathmatch:
      matching-strategy: ant_path_matcher
  web:
    resources:
      add-mappings: false
server:
  port: ${SERVER_PORT:8000}
  error:
    whitelabel:
      enabled: false
    path: /error
management:
  server:
    port: ${MANAGEMENT_SERVER_PORT:8000}
    ssl:
      enabled: false
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS_LIST:loggers,health,metrics,liquibase,caches}
  health:
    db:
      enabled: ${ACTUATOR_HEALTH_DB_ENABLED:true}
    defaults:
      enabled: ${ACTUATOR_HEALTH_DEFAULTS_ENABLED:false}
    livenessState:
      enabled: ${ACTUATOR_HEALTH_LIVEENESS_ENABLED:true}
    readinessState:
      enabled: ${ACTUATOR_HEALTH_READINESS_ENABLED:true}
  endpoint:
    loggers:
      enabled: true
    health:
      probes:
        enabled: ${ACTUATOR_PROBES_ENABLED:true}
      show-details: ${ACTUATOR_HEALTH_SHOW_DETAILS:always}
springdoc:
  swagger-ui:
    #    url: /swagger.yaml
    enabled: ${SWAGGER_UI_ENABLED:true}
test-io:
  auth:
    white-list: /register, /login, /swagger-ui/**, /v3/api-docs/**,/actuator/**, /*/actuator/**
